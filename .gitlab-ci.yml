image: gradle:jdk21

stages:
  - test
  - build

Test:
  stage: test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  script:
    - ./gradlew test jacocoTestReport
    - COVERAGE=$(cat build/reports/jacoco/test/html/index.html | grep -o '<tfoot>.*</tfoot>' | grep -o '[0-9]\{1,3\}%' | head -n 1)
    - echo $COVERAGE | sed 's/%//' > coverage.txt
    - echo $COVERAGE
  coverage: '/Total.*?([0-9]{1,3})%/'
  artifacts:
    paths:
      - coverage.txt
    reports:
      coverage_report:
        coverage_format: jacoco
        path: build/reports/jacoco/test/jacocoTestReport.xml

Coverage check:
  stage: test
  needs:
    - job: Test
      artifacts: true
  script:
    - |
      apt-get update && apt-get install -y bc
      COVERAGE=$(cat coverage.txt)
      echo "Extracted coverage: $COVERAGE%"
      if (( $(echo "$COVERAGE < 80" | bc -l) )); then
        echo "Code coverage $COVERAGE% is less than 80%"
        exit 1
      else
        echo "Code coverage is acceptable ($COVERAGE%)"
      fi

Build using Gradle:
  stage: build
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  script:
    - ./gradlew --build-cache assemble

Build and push Docker image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_TOKEN" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
